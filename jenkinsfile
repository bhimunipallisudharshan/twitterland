
def registry = 'https://twittertrend.jfrog.io/'pipeline{
    agent {
        node {
            label "javabuildserver2"
        }
    }
    environment {
        PATH = "/opt/apache-maven-3.8.7/bin:$PATH"
    }
    stages {
        stage('build') {
            steps{
                sh 'mvn clean deploy'
        }
      }
       stage ("Sonar Analysis") {
            environment {
               scannerHome = tool 'sonarscanner'
            }
            steps {
                withSonarQubeEnv('sonarqubeserver') {    
                    sh "${scannerHome}/bin/sonar-scanner"

                }    
               
            }   
        }
       stage("Quality Gate") {
            steps {
                script {
                    timeout(time: 1, unit: 'HOURS'){
                       def qg = waitForQualityGate()
                        if(qg.status !='OK') {
                            error "Pipeline failed due to quality gate failures: ${qg.status}"
                        }
                    }  
                }
            }
        } 
            stage("Jar Publish") {
        steps {
            script {
                    echo '<--------------- Jar Publish Started --------------->'
                     def server = Artifactory.newServer url:registry+"/artifactory" ,  credentialsId:"3580fe61-e231-4036-8e59-5c2dad0e0cbb"
                     def properties = "buildid=${env.BUILD_ID},commitid=${GIT_COMMIT}";
                     def uploadSpec = """{
                          "files": [
                            {
                              "pattern": "jarstaging/(*)",
                              "target": "ttrend-libs-release-local/{1}",
                              "flat": "false",
                              "props" : "${properties}",
                              "exclusions": [ "*.sha1", "*.md5"]
                            }
                         ]
                     }"""
                     def buildInfo = server.upload(uploadSpec)
                     buildInfo.env.collect()
                     server.publishBuildInfo(buildInfo)
                     echo '<--------------- Jar Publish Ended --------------->'  
            
            }
        }   
    }    
    }   
 }

